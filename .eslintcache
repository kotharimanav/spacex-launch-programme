[{"/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/index.js":"1","/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/App.js":"2","/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/reportWebVitals.js":"3","/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/Filter/Filter.jsx":"4","/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/Dashboard/Dashboard.jsx":"5","/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/services/lunch-data.js":"6"},{"size":500,"mtime":1608808019245,"results":"7","hashOfConfig":"8"},{"size":810,"mtime":1608816306639,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608808019245,"results":"10","hashOfConfig":"8"},{"size":1526,"mtime":1608815476860,"results":"11","hashOfConfig":"8"},{"size":2102,"mtime":1608816740013,"results":"12","hashOfConfig":"8"},{"size":364,"mtime":1608814548744,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gqhi8p",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/index.js",[],["28","29"],"/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/App.js",[],"/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/reportWebVitals.js",[],"/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/Filter/Filter.jsx",["30"],"import { useState } from 'react';\nimport './filter.scss';\n\nconst Filter = (props) => {\n\n  const years= [2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020];\n\n  return (\n    <div className=\"filter card\">\n      <h4>Filter</h4>\n      <h5>Launch Year</h5>\n      <div className=\"\">\n        {years.map(year=><button className={props.filters.launch_year === year ?'btn btn_hover col-5 mx-1':\"btn col-5 mx-1\"} onClick={() => { props.setFilters({ ...props.filters, launch_year: year }) }}>{year}</button>)}\n      </div>\n      <h5>Successful Launch</h5>\n      <div>\n        <button className={props.filters.launch_success === true ?'btn btn_hover col-5 mx-1':\"btn col-5 mx-1\"} onClick={() => { props.setFilters({ ...props.filters, launch_success: true }) }}>True</button>\n        <button  className={props.filters.launch_success === false ?'btn btn_hover col-5 mx-1':\"btn col-5 mx-1\"} onClick={() => { props.setFilters({...props.filters, launch_success: false }) }}>False</button>\n      </div>\n      <h5>Successful Landing</h5>\n      <div>\n        <button className={props.filters.landing_success === true ?'btn btn_hover col-5 mx-1':\"btn col-5 mx-1\"} onClick={() => { props.setFilters({...props.filters, landing_success: true }) }}>True</button>\n        <button className={props.filters.landing_success === false ?'btn btn_hover col-5 mx-1':\"btn col-5 mx-1\"} onClick={() => { props.setFilters({...props.filters, landing_success: false }) }}>False</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Filter;\n","/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/Dashboard/Dashboard.jsx",["31"],"/home/bacancy/Manav/bacancy/SpaceX-Demo/spacex-demo/src/services/lunch-data.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":10,"nodeType":"38","messageId":"39","endLine":1,"endColumn":18},{"ruleId":"40","severity":1,"message":"41","line":20,"column":29,"nodeType":"42","endLine":20,"endColumn":127},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]